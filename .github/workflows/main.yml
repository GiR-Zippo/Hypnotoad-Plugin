name: .NET Build

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: HypnotoadPlugin/HypnotoadPlugin.csproj
      - run: echo "${{steps.get-version.outputs.version}}"
      - run: echo "${{steps.get-version.outputs.version-prefix}}" 
      - run: echo "${{steps.get-version.outputs.version-suffix}}" 
      - run: echo "${{steps.get-version.outputs.package-version}}" 
      - run: echo "${{steps.get-version.outputs.assembly-version}}" 
      - run: echo "${{steps.get-version.outputs.file-version}}" 
      - run: echo "${{steps.get-version.outputs.informational-version}}"

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.get-version.outputs.version}}
          release_name: Release ${{steps.get-version.outputs.version}}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: X
          utcOffset: "+01:00"
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY

      - name: remove old pluginmaster file
        run: Remove-Item ./PluginDir/* -Force -Recurse

      - name: copy pluginmaster file
        run: Copy-Item ./configs/* ./PluginDir -Force
          
      - name: Set version in pluginmaster
        run: sed -i 's/iRELEASE/${{steps.get-version.outputs.version}}/g' ./PluginDir/pluginmaster.json
      
      - name: Set time in pluginmaster
        run: sed -i 's/iTIME/${{steps.current-time.outputs.formattedTime}}/g' ./PluginDir/pluginmaster.json

      - name: Set plogonUrl in pluginmaster
        run: sed -i 's/iPLUGINURL/${{ github.server_url }}/${{ github.repository }}/g' ./PluginDir/pluginmaster.json
      
      - name: Set version in HypnotoadPlugin
        run: sed -i 's/iRELEASE/${{steps.get-version.outputs.version}}/g' ./PluginDir/HypnotoadPlugin.json

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.3
        with:
          dotnet-version: '9.x.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Build
        run: |
          dotnet build --no-restore --configuration Release --nologo

      - name: Commit latest build to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Build"
          file_pattern: "./PluginDir/*.json"

      - name: Move latest build to Release
        run: Move-Item -Path ./HypnotoadPlugin/bin/x64/Release/HypnotoadPlugin/* -Destination ./PluginDir/ -Force
        
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create-new-release.outputs.upload_url }}
          asset_path: ./PluginDir/latest.zip
          asset_name: latest.zip
          asset_content_type: application/zip
